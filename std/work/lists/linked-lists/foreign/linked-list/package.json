{
  "_args": [
    [
      {
        "raw": "linked-list",
        "scope": null,
        "escapedName": "linked-list",
        "name": "linked-list",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "T:\\web\\code\\published\\test"
    ]
  ],
  "_from": "linked-list@latest",
  "_id": "linked-list@1.0.1",
  "_inCache": true,
  "_location": "/linked-list",
  "_nodeVersion": "4.0.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/linked-list-1.0.1.tgz_1478776730936_0.36751817306503654"
  },
  "_npmUser": {
    "name": "wooorm",
    "email": "tituswormer@gmail.com"
  },
  "_npmVersion": "2.14.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "linked-list",
    "scope": null,
    "escapedName": "linked-list",
    "name": "linked-list",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/linked-list/-/linked-list-1.0.1.tgz",
  "_shasum": "e40f0a70d3b06bfa5e0f56e6aa08292cd3500a15",
  "_shrinkwrap": null,
  "_spec": "linked-list",
  "_where": "T:\\web\\code\\published\\test",
  "author": {
    "name": "Titus Wormer",
    "email": "tituswormer@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/wooorm/linked-list/issues"
  },
  "dependencies": {},
  "description": "Minimalistic linked lists",
  "devDependencies": {
    "browserify": "^13.1.1",
    "esmangle": "^1.0.1",
    "has": "^1.0.1",
    "nyc": "^8.4.0",
    "remark-cli": "^2.1.0",
    "remark-preset-wooorm": "^1.0.0",
    "tape": "^4.6.2",
    "xo": "^0.17.0"
  },
  "directories": {},
  "dist": {
    "shasum": "e40f0a70d3b06bfa5e0f56e6aa08292cd3500a15",
    "tarball": "https://registry.npmjs.org/linked-list/-/linked-list-1.0.1.tgz"
  },
  "gitHead": "f2a7ec905daed1af1044ca9b62cd1fcd0a153d76",
  "homepage": "https://github.com/wooorm/linked-list#readme",
  "keywords": [
    "double",
    "linked",
    "list"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "wooorm",
      "email": "tituswormer@gmail.com"
    }
  ],
  "name": "linked-list",
  "nyc": {
    "check-coverage": true,
    "lines": 100,
    "functions": 100,
    "branches": 100
  },
  "optionalDependencies": {},
  "readme": "# linked-list [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nSmall double [linked list][wiki].\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install linked-list\n```\n\n## Usage\n\n```javascript\nvar LinkedList = require('linked-list');\n\nvar item1 = new LinkedList.Item();\nvar item2 = new LinkedList.Item();\nvar item3 = new LinkedList.Item();\nvar list = new LinkedList(item1, item2, item3);\n\nlist.head; //=> item1\nlist.head.next; //=> item2\nlist.head.next.next; //=> item3\nlist.head.next.prev; //=> item1\nlist.tail; //=> item3\nlist.tail.next; //=> `null`\n```\n\nSubclassing:\n\n```javascript\nvar inherits = require('inherits');\nvar List = require('./');\n\nTokens.prototype.join = join;\nToken.prototype.toString = toString;\n\ninherits(Tokens, List);\ninherits(Token, List.Item);\n\nvar dogs = new Token('dogs');\nvar and = new Token('&');\nvar cats = new Token('cats');\nvar tokens = new Tokens(dogs, and, cats);\n\ntokens.join(' '); //=> 'dogs & cats'\n\nand.prepend(cats);\nand.append(dogs);\n\ntokens.join(' ') + '!'; //=> 'cats & dogs!'\n\nfunction Tokens() {\n  List.apply(this, arguments);\n}\n\nfunction Token(value) {\n  this.value = value;\n  List.Item.apply(this, arguments);\n}\n\nfunction join(delimeter) {\n  return this.toArray().join(delimeter);\n}\n\nfunction toString() {\n  return this.value;\n}\n```\n\n## API\n\n### `LinkedList([items…])`\n\n```javascript\nnew LinkedList();\nnew LinkedList(new LinkedList.Item(), new LinkedList.Item());\n```\n\nCreate a new Linked List.\n\n#### `LinkedList.from([items])`\n\n```javascript\nLinkedList.from();\nLinkedList.from([]),\nLinkedList.from([new LinkedList.Item(), new LinkedList.Item()]);\n```\n\nCreate a new `this` and adds the given array of items.  Ignores `null`\nor `undefined` values.  Throws an error when a given item has no `detach`,\n`append`, or `prepend` methods.\n\n#### `LinkedList.of([items…])`\n\n```javascript\nLinkedList.of(),\nLinkedList.of(new LinkedList.Item(), new LinkedList.Item());\n```\n\nCreates a new Linked List from the given arguments.  Defers to\n`LinkedList.from`.\n\n#### `LinkedList#append(item)`\n\n```javascript\nvar list = new LinkedList()\nvar item = new LinkedList.Item();\n\nlist.head === null //=> true\nitem.list === null //=> true\n\nlist.append(item);\n\nlist.head === item //=> true\nitem.list === list //=> true\n```\n\nAppends an item to a list.  Throws an error when the given item has no\n`detach`, `append`, or `prepend` methods.  Returns the given item.\n\n#### `LinkedList#prepend(item)`\n\n```javascript\nvar list = new LinkedList(),\nvar item = new LinkedList.Item();\n\nlist.prepend(item);\n```\n\nPrepends an item to a list.  Throws an error when the given item has\nno `detach`, `append`, or `prepend` methods.  Returns the given item.\n\n#### `LinkedList#toArray()`\n\n```javascript\nvar item1 = new LinkedList.Item();\nvar item2 = new LinkedList.Item(),\nvar list = new LinkedList(item1, item2),\nvar array = list.toArray();\n\narray[0] === item1; //=> true\narray[1] === item2; //=> true\narray[0].next === item2; //=> true\narray[1].prev === item1; //=> true\n```\n\nReturns the items in the list in an array.\n\n#### `LinkedList#head`\n\n```javascript\nvar item = new LinkedList.Item();\nvar list = new LinkedList(item);\n\nlist.head === item; //=> true\n```\n\nThe first item in a list, and `null` otherwise.\n\n#### `LinkedList#tail`\n\n```javascript\nvar list = new LinkedList();\nvar item1 = new LinkedList.Item();\nvar item2 = new LinkedList.Item();\n\nlist.tail === null; //=> true\n\nlist.append(item1);\nlist.tail === null; //=> true, see note.\n\nlist.append(item2);\nlist.tail === item2; //=> true\n```\n\nThe last item in a list, and `null` otherwise.  Note that a list with only\none item has **no tail**, only a head.\n\n## `LinkedList.Item()`\n\n```javascript\nvar item = new LinkedList.Item();\n```\n\nCreates a new Linked List Item.\n\n#### `LinkedList.Item#append(item)`\n\n```javascript\nvar item1 = new LinkedList.Item();\nvar item2 = new LinkedList.Item();\n\n(new LinkedList()).append(item1);\n\nitem1.next === null; //=> true\n\nitem1.append(item2);\nitem1.next === item2; //=> true\n```\n\nAdds the given item **after** the operated on item in a list.  Throws\nan error when the given item has no `detach`, `append`, or `prepend`\nmethods.  Returns false when the operated on item is not attached to\na list, otherwise the given item.\n\n#### `LinkedList.Item#prepend(item)`\n\n```javascript\nvar item1 = new LinkedList.Item();\nvar item2 = new LinkedList.Item();\n\n(new LinkedList()).append(item1);\n\nitem1.prev === null; //=> true\n\nitem1.prepend(item2);\nitem1.prev === item2; //=> true\n```\n\nAdds the given item **before** the operated on item in a list.  Throws an\nerror when the given item has no `detach`, `append`, or `prepend` methods.\nReturns false when the operated on item is not attached to a list, otherwise\nthe given item.\n\n#### `LinkedList.Item#detach()`\n\n```javascript\nvar item = new LinkedList.Item();\nvar list = new LinkedList(item);\n\nitem.list === list; //=> true\n\nitem.detach();\nitem.list === null; //=> true\n```\n\nRemoves the operated on item from its parent list.  Removes references to\nit on its parent `list`, and `prev` and `next` items; relinking them when\npossible.  Returns the operated on item.  Even when it was already detached.\n\n#### `LinkedList.Item#next`\n\n```javascript\nvar item1 = new LinkedList.Item();\nvar item2 = new LinkedList.Item();\n\nnew LinkedList(item1);\n\nitem1.next === null; //=> true\nitem2.next === null; //=> true\n\nitem1.append(item2);\n\nitem1.next === item2; //=> true\n\nitem1.detach();\n\nitem1.next === null; //=> true\n```\n\nThe items succeeding item, and `null` otherwise.\n\n#### `LinkedList.Item#prev`\n\n```javascript\nvar item1 = new LinkedList.Item();\nvar item2 = new LinkedList.Item();\n\nnew LinkedList(item);\n\nitem1.prev === null; //=> true\nitem2.prev === null; //=> true\n\nitem1.append(item2);\n\nitem1.prev === item1; //=> true\n\nitem2.detach();\n\nitem2.prev === null; //=> true\n```\n\nThe items preceding item, and `null` otherwise.\n\n#### `LinkedList.Item#list`\n\n```javascript\nvar item = new LinkedList.Item();\nvar list = new LinkedList();\n\nitem.list === null; //=> true\n\nlist.append(item);\n\nitem.list === list; //=> true\n\nitem.detach();\n\nitem.list === null; //=> true\n```\n\nThe items parent list, and `null` otherwise.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/linked-list.svg\n\n[travis]: https://travis-ci.org/wooorm/linked-list\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/linked-list.svg\n\n[codecov]: https://codecov.io/github/wooorm/linked-list\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[wiki]: http://wikipedia.org/wiki/Linked_list\n",
  "readmeFilename": "readme.md",
  "remarkConfig": {
    "presets": "wooorm"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/wooorm/linked-list.git"
  },
  "scripts": {
    "build": "npm run build-md && npm run build-bundle && npm run build-mangle",
    "build-bundle": "browserify index.js --bare -s LinkedList > linked-list.js",
    "build-mangle": "esmangle < linked-list.js > linked-list.min.js",
    "build-md": "remark . --quiet --frail --output",
    "lint": "xo",
    "test": "npm run build && npm run lint && npm run test-coverage",
    "test-api": "node test",
    "test-coverage": "nyc --reporter lcov tape test.js"
  },
  "version": "1.0.1",
  "xo": {
    "space": true,
    "ignores": [
      "linked-list.js"
    ]
  }
}
